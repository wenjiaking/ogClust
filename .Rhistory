getwd()
setwd("~/OneDrive - University of Pittsburgh/Combine_p-value/HCp")
setwd("/Users/wenjia/Library/CloudStorage/OneDrive-UniversityofPittsburgh/ogClust")
library(devtools)
library(roxygen2)
document()
load_all()
check()
data('GSE47460_GPL14550')
X<-GSE47460_GPL6480$Covariates
G<-GSE47460_GPL6480$Expression
Y<-GSE47460_GPL6480$outcome
g.mean<-apply(G,1,mean)
cut.mean=quantile(g.mean,probs=0.5)
G=G[g.mean>cut.mean,]
g.sd=apply(G,1, sd)
cut.sd=quantile(g.sd,probs=0.5)
G=G[g.sd>=cut.sd,]
G<-t(G)
G<-scale(G)
dim(G)
G=G[,1:200]
mod.kmeans<-kmeans(G,centers = 3,nstart = 50)
center<-matrix(NA,nrow=ncol(G),ncol=3)
center[,1]<-apply(G[which(mod.kmeans[[20]]$Cs==1),],2,mean)
length(mod.kmeans)
G<-GSE47460_GPL6480$Expression
G=G[g.mean>cut.mean,]
G=G[g.sd>=cut.sd,]
G<-t(G)
G<-scale(G)
dim(G)
mod.kmeans<-kmeans(G,centers = 3,nstart = 50)
center<-matrix(NA,nrow=ncol(G),ncol=3)
center[,1]<-apply(G[which(mod.kmeans[[20]]$Cs==1),],2,mean)
length(mod.kmeans)
document()
document()
load_all()
check()
build()
data('GSE47460_GPL14550')
X<-GSE47460_GPL14550$Covariates
G<-GSE47460_GPL14550$Expression
Y<-GSE47460_GPL14550$outcome
g.mean<-apply(G,1,mean)
cut.mean=quantile(g.mean,probs=0.5)
G=G[g.mean>cut.mean,]
g.sd=apply(G,1, sd)
cut.sd=quantile(g.sd,probs=0.5)
G=G[g.sd>=cut.sd,]
G<-t(G)
G<-scale(G)
dim(G)
mod.kmeans<-kmeans(G,centers = 3,nstart = 50)
center<-matrix(NA,nrow=ncol(G),ncol=3)
center[,1]<-apply(G[which(mod.kmeans[[20]]$Cs==1),],2,mean)
length(mod.kmeans)
names(mod.kmeans)
dim(mod.kmeans$centers)
center<-t(mod.kmeans$centers)
G=G[,1:200]
dim(G)
mod.kmeans<-kmeans(G,centers = 3,nstart = 50)
center<-t(mod.kmeans$centers)
dim(center)
s_G<-200
w<-0.727
w<-(s_G*w)/(s_G*w+1-w)
lambda<-8
fit.res = ogClust_WJL(x=X,G=t(G),y=Y,c_center=center,ambda=lambda,v_int=NULL,pi_int=NULL,K=3,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
fit.res = ogClust_WJL(x=X,G=t(G),y=Y,c_center=center,lambda=lambda,v_int=NULL,pi_int=NULL,K=3,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
class(X)
dim(X)
fit.res = ogClust_WJL(x=as.matrix(X),G=t(G),y=Y,c_center=center,lambda=lambda,v_int=NULL,pi_int=NULL,K=3,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
names(fit.res )
fit.res$iter
names(fit.res$result_list)
dim(fit.res$result_list)
dim(fit.res$result_list$mu)
data('GSE47460_GPL6480')
G.test<-t(GSE47460_GPL6480$Expression)
X.test<-GSE47460_GPL6480$Covariates
index<-match(colnames(G),colnames(G.test))
G.test<-G.test[,index]
dim(G.test)
mod.predict<-predict_WJL(fit.res,K = 3,D.test =G.test,X1 =X.test, p = ncol(G))
mod.predict$clus
ncol(G.test)
ncol(G)
n=nrow(G)
NG=ncol(G)
np=ncol(X)
K=3
lambda=0.001
beta_int = runif(np, 0, 3)
gamma_int = runif((K - 1) * (NG + 1), 0, 1)
beta0_int = runif(K, 0, 3)
sigma2_int = runif(1, 1, 3)
theta_int = c(beta_int, gamma_int, beta0_int, sigma2_int)
fit.res<-ogClust_GM(n=n, K=K, np=np, NG=NG, lambda=lambda,alpha=1, G=G, Y=Y, X=X,theta_int=theta_int)
names(fit.res)
table(fit.res$grp_assign)
data('GSE47460_GPL6480')
G.test<-t(GSE47460_GPL6480$Expression)
X.test<-GSE47460_GPL6480$Covariates
index<-match(colnames(G),colnames(G.test))
G.test<-G.test[,index]
dim(G.test)
mod.predict<-predict_GM(fit.res,K = 3,D.test =G.test,X.test =X.test)
names(mod.predict)
table(mod.predict$clus)
data('Data.Metabric')
G=Data.Metabric$Expression
X=Data.Metabric$covariate
Y=Data.Metabric$OS
delta<-Data.Metabric$OS.event
Index.Mean<-order(apply(G,2,mean),decreasing = T)
G <- G[,Index.Mean[1:(ncol(G)/2)]]
Index.Sd<-order(apply(G,2,sd),decreasing = T)
G<-G[,Index.Sd[1:(ncol(G)/2)]]
G<-scale(G)
dim(G)
G=G[,1:200]
mod.kmeans<-KMeansSparseCluster(G,K = 2,nstart = 50)
mod.kmeans<-kmeans(G,centers = 3,nstart = 50)
center<-t(mod.kmeans$centers)
dim(center)
mod.kmeans<-kmeans(G,centers = 2,nstart = 50)
center<-t(mod.kmeans$centers)
s_G<-300
w<-0.8
w<-(s_G*w)/(s_G*w+1-w)
lambda=0.007
ogClust_WJL.Surv(x=X,G=t(G),y=Y,y.ind=delta,c_center=center,lambda=lambda,v_int=NULL,pi_int=NULL,K=2,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
ogClust_WJL.Surv(x=as.matrix(X),G=t(G),y=Y,y.ind=delta,c_center=center,lambda=lambda,v_int=NULL,pi_int=NULL,K=2,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
dim(Y)
length(Y)
dim(G)
length(delta)
dim(X)
G=Data.Metabric$Expression
G <- G[,Index.Mean[1:(ncol(G)/2)]]
G<-G[,Index.Sd[1:(ncol(G)/2)]]
G<-scale(G)
dim(G)
mod.kmeans<-kmeans(G,centers = 2,nstart = 50)
center<-t(mod.kmeans$centers)
s_G<-300
w<-0.8
w<-(s_G*w)/(s_G*w+1-w)
lambda=0.007
dim(G)
ogClust_WJL.Surv(x=as.matrix(X),G=t(G),y=Y,y.ind=delta,c_center=center,lambda=lambda,v_int=NULL,pi_int=NULL,K=2,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
dim(G)
document()
load_all()
check()
build()
dim(G)
dim(X)
dim(center)
length(delta)
length(Y)
ogClust_WJL.Surv(x=as.matrix(X),G=t(G),y=Y,y.ind=delta,c_center=center,lambda=lambda,v_int=NULL,pi_int=NULL,K=2,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
document()
load_all()
check()
build()
ogClust_WJL.Surv(x=as.matrix(X),G=t(G),y=Y,y.ind=delta,c_center=center,lambda=lambda,v_int=NULL,pi_int=NULL,K=2,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
set.seed(12315)
ogClust_WJL.Surv(x=as.matrix(X),G=t(G),y=Y,y.ind=delta,c_center=center,lambda=lambda,v_int=NULL,pi_int=NULL,K=2,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
document()
load_all()
check()
build()
ogClust_WJL.Surv(x=as.matrix(X),G=t(G),y=Y,y.ind=delta,c_center=center,lambda=lambda,v_int=NULL,pi_int=NULL,K=2,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
dim(X)
colnames(X)
getwd()
load("Simulation/Data/Data.Metabric.after.Combat_TNBC.Rdata")
dim(Data.Metabric.after.Combat$covariate)
X=Data.Metabric$covariate[,1]
ogClust_WJL.Surv(x=as.matrix(X),G=t(G),y=Y,y.ind=delta,c_center=center,lambda=lambda,v_int=NULL,pi_int=NULL,K=2,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
fit.res=ogClust_WJL.Surv(x=as.matrix(X),G=t(G),y=Y,y.ind=delta,c_center=center,lambda=lambda,v_int=NULL,pi_int=NULL,K=2,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
names(fit.res)
document()
load_all()
check()
fit.res=ogClust_WJL.Surv(x=as.matrix(X),G=t(G),y=Y,y.ind=delta,c_center=center,lambda=lambda,v_int=NULL,pi_int=NULL,K=2,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
names(fit.res)
fit.res$iter
names(fit.res$result_list)
dim(fit.res$result_list$mu)
n=nrow(G)
NG=ncol(G)
G=G[,1:200]
NG=ncol(G)
np=ncol(X)
np
dim(X)
X=as.matrix(Data.Metabric$covariate[,1])
dim(X)
np=ncol(X)
K=2
lambda=0.007
beta_int = runif(np, 0, 3)
gamma_int = runif((K - 1) * (NG + 1), 0, 1)
beta0_int = runif(K, 0, 3)
sigma2_int = runif(1, 1, 3)
theta_int = c(beta_int, gamma_int, beta0_int, sigma2_int)
fit.res<-ogClust_GM.Surv(n=n, K=K, np=np, NG=NG, lambda=lambda,delta = delta,alpha=1, G=G, Y=Y, X=X, theta_int=theta_int)
names(fit.res)
table(fit.res$grp_assign)
names(fit.res$par)
document()
load_all()
check()
build()
getwd()
document()
load_all()
check()
build()
getwd()

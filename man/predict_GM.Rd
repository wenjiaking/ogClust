% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_GM.R
\name{predict_GM}
\alias{predict_GM}
\title{Get the predicted cluster label and predicted outcome using the gene expression of validation dataset and the ogClust_GM model from training data}
\usage{
predict_GM(mod, K, D.test, X.test)
}
\arguments{
\item{mod}{ogClust_GM model from discovery/training data, generated by ogClust_GM() or ogClust_GM.surv()}

\item{K}{Number of clusters}

\item{D.test}{Gene expression of validation/testing data (n*p matrix)}

\item{X.test}{covariate matrix of discovery/training data (n*q matrix)}
}
\value{
a list with five components
\itemize{
\item{y.pred: }{predicted outcome}
\item{clus: }{predicted cluster label}
}
}
\description{
Get the predicted cluster label and predicted outcome using the gene expression of validation dataset and the ogClust_GM model from training data
}
\examples{
\dontrun{
data('GSE47460_GPL14550') #load lung dataset
X<-GSE47460_GPL14550$Covariates
G<-GSE47460_GPL14550$Expression
Y<-GSE47460_GPL14550$outcome

  g.mean<-apply(G,1,mean)
  cut.mean=quantile(g.mean,probs=0.5)
  G=G[g.mean>cut.mean,] # remove 50\% lowest mean expression genes
  g.sd=apply(G,1, sd)
  cut.sd=quantile(g.sd,probs=0.5)
  G=G[g.sd>=cut.sd,] # further remove 50\% lowest variance genes
  G<-t(G)
  G<-scale(G)
  number of subjects
  n=nrow(G)
  # number of genes
  NG=ncol(G)
  # number of covariates
  np=ncol(X)
  # number of clusters
  K=3
  # tuning parameter
  lambda=0.001
  fit.res<-ogClust_GM(n=n, K=K, np=np, NG=NG, lambda=lambda,
                    alpha=1, G=G, Y=Y, X=X,theta_int=theta_int)
#predict for the validation data
data('GSE47460_GPL6480')
G.test<-t(GSE47460_GPL6480$Expression)
X.test<-GSE47460_GPL6480$Covariates
index<-match(colnames(G),colnames(G.test))
G.test<-G.test[,index]
mod.predict<-predict_GM(fit.res,K = 3,D.test =G.test,X.test =X.test)
}
}

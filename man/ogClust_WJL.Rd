% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ogClust_WJL.R
\name{ogClust_WJL}
\alias{ogClust_WJL}
\title{ogClust_WJL mehtod to cluster with continuous outcome}
\usage{
ogClust_WJL(
  x,
  G,
  y,
  c_center = NULL,
  lambda,
  v_int = NULL,
  pi_int = NULL,
  K = 3,
  max_iter = 200,
  w_outcome,
  w_G,
  z_int = NULL
)
}
\arguments{
\item{x}{covariates in the outcome association model (e.g., age, gender, BMI),  n*q matrix where n is sample size and q is number of covariates}

\item{G}{Gene expression data (p*n matrix), where each row is a gene and each column is a sample}

\item{y}{outcome, a vector of length n}

\item{c_center}{a n*K matrix which determines the initial clusters.}

\item{lambda}{a tuning parameter determines gene selection.}

\item{v_int}{initial variance for each gene, optional}

\item{pi_int}{initial probability for each cluster, optional}

\item{K}{Number of Clusters}

\item{max_iter}{maximum number of iterations}

\item{w_outcome}{weight for outcome}

\item{w_G}{weight for gene expression}

\item{z_int}{a initial cluster assignment matrix. A n*K matrix where each row denotes the probability
for a sample belongs to each cluster. If z_int is given, c_center will be ignored.}
}
\value{
result_list: A list with final estimators.
\itemize{
\item{mu: }{p\emph{K matrix where each row represents the cluster centers for each feature}
\item{sigma: }{a vector of length p, the standard deviation for each feature}
\item{z: }{n}K matrix where each row represents the probability the sample belongs to each cluster}
\item{pi: }{a vector of length K, mixed probability for each cluster}
\item{int_coef: }{a K+q vector, the first K elements are the intercept estimated for each cluster. The next q values are the common coefficient for the covariates.}
\item{int_sigma_coef: }{standard deviation estimation in the outcome association model.}
}
Other three outputs:
\itemize{
\item{BIC: }{BIC from the final model}
\item{lik: }{optimal log likelihood achieved}
\item{iter: }{Number of iterations before convergence}
}
}
\description{
ogClust_WJL mehtod to cluster with continuous outcome
}
\examples{
\dontrun{
data('GSE47460_GPL14550') #load lung dataset
X<-GSE47460_GPL14550$Covariates
G<-GSE47460_GPL14550$Expression
Y<-GSE47460_GPL14550$outcome

  g.mean<-apply(G,1,mean)
  cut.mean=quantile(g.mean,probs=0.5)
  G=G[g.mean>cut.mean,] # remove 50\% lowest mean expression genes
  g.sd=apply(G,1, sd)
  cut.sd=quantile(g.sd,probs=0.5)
  G=G[g.sd>=cut.sd,] # further remove 50\% lowest variance genes
  G<-t(G)
  G<-scale(G)
#initialize cluster centers:
mod.kmeans<-kmeans(G,centers = 3,nstart = 50)
center<-t(mod.kmeans$centers)
#input the weight and lambda
s_G<-200
w<-0.727
w<-(s_G*w)/(s_G*w+1-w)
lambda<-8
#implement ogClust_WJL
fit.res = ogClust_WJL(x=as.matrix(X),G=t(G),y=Y,c_center=center,
             lambda=lambda,v_int=NULL,pi_int=NULL,K=3,max_iter=200,w_outcome=w,w_G=1-w,z_int=NULL)
}
}
